-- vim: syntax=moonscript
-- How much logs do we want? (ERR, WARN, INFO, DEBUG)
log_level "INFO"

lint = require("moonscript.cmd.lint").lint_file
package.loaded.lint_config = pcall -> loadfile('lint_config')()
colors = require "ansicolors"

spec_cmd = command "./spook -f spec/support/run_busted.lua"
exec_cmd = command "./spook -f"
lint_cmd = func name: "Lint", handler: (file) ->
  result, err = lint file
  if result
    io.stdout\write colors("\n[ %{red}LINT error ]\n%{white}#{result}\n\n")
    return false
  elseif err
    io.stdout\write colors("\n[ %{red}LINT error ]\n#%{white}{file}\n#{err}\n\n")
    return false
  io.stdout\write colors("\n[ %{green}LINT: %{white}All good ]\n\n")
  true

-- Directories to watch for changes, how to map detected changes to
-- files and what to run
watch "lib", "spec", ->
  on_changed "^spec/spec_helper%.moon", -> spec_cmd "spec"
  on_changed "^spec/(.*)%.moon", (a) ->
    lint_cmd("spec/#{a}.moon") +
    spec_cmd("spec/#{a}.moon")
  on_changed "^lib/(.*)%.moon", (a) ->
    lint_cmd("lib/#{a}.moon") +
    spec_cmd("spec/#{a}_spec.moon")

watch "playground", ->
  on_changed "^playground/(.*)%.moon", (a) -> exec_cmd "playground/#{a}.moon"
  on_changed "^playground/(.*)%.lua", (a) -> exec_cmd "playground/#{a}.lua"

notifier "#{os.getenv('HOME')}/.spook/notifiers"
